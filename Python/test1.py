# -*- coding: utf-8 -*-
"""test1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18NIltsMLwznYUl9MrhjySZLBSvyakwj6

Zachary M Taylor
"""

import numpy as np
import pandas as pd
import cv2 as cv
from google.colab.patches import cv2_imshow # for image display
from skimage import io
from PIL import Image
import matplotlib.pylab as plt

"""Image Upload"""

# Insert code for read, switch, and display image here

yourUrl = 'https://i.tribune.com.pk/media/images/1930532-dsc__tea_cupcopyx-1552712033/1930532-dsc__tea_cupcopyx-1552712033.jpg'
image = io.imread(yourUrl)

height = image.shape[0] / 2
width = image.shape[1]
print(image.shape[0])
print(image.shape[1])
# do it !

"""Image transformations"""

image_2 = cv.cvtColor(image, cv.COLOR_BGR2RGB)
final_frame = cv.hconcat((image, image_2))
cv2_imshow(final_frame)

"""Histogram"""

# you can use slicing to select the half part of the image
newImg = image_2[0:240, 0:640]
cv2_imshow(newImg)
# get the histogram
plt.hist(newImg.ravel(), bins = 256, range = [0,256])
plt.show()
#convert to CIELab
cieImg = cv.cvtColor(newImg, cv.COLOR_RGB2LAB)
cv2_imshow(cieImg)
plt.hist(newImg.ravel(), bins = 256, range = [0,256])
plt.show()
# Create a new image with added value of 10 in the L channel, and convert it back to BGR to visualize it.
cieImg1 = cieImg[10,:,:]+cieImg


cieImg1 = cv.cvtColor(cieImg1, cv.COLOR_LAB2BGR)
cv2_imshow(cieImg1)
plt.hist(cieImg1.ravel(), bins = 256, range = [0,256])
plt.show()
# Create a new image with substracted value of 10 in the L channel, and convert it back to BGR to visualize it.
cieImg2 = cieImg[-10,:,:]+cieImg


cieImg2 = cv.cvtColor(cieImg2, cv.COLOR_LAB2BGR)
cv2_imshow(cieImg2)
plt.hist(cieImg2.ravel(), bins = 256, range = [0,256])
plt.show()
# Create a new image with added value of 10 in the a channel, and convert it back to BGR to visualize it.
cieImg3 = cieImg[:,10,:]+cieImg


cieImg3 = cv.cvtColor(cieImg3, cv.COLOR_LAB2BGR)
cv2_imshow(cieImg3)
plt.hist(cieImg3.ravel(), bins = 256, range = [0,256])
plt.show()

"""Python is a very powerful tool for editing images, however, I ran into trouble with affecting the L and a channels b

*   List item
*   List item


"""